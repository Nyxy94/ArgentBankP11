swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /users/{user-id}/transactions:
    get:
      tags:
        - Transactions
      summary: Retrieve all transactions for the current month
      description: Retrieve all transactions for the current month, grouped by account.
      parameters:
        - in: path
          name: user-id
          required: true
          description: User ID to filter transactions
          type: string
      responses:
        '200':
          description: List of transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized - User is not authenticated or does not have the necessary permissions
        '403':
          description: Forbidden - Authenticated user is not allowed to access this resource
        '404':
          description: User not found
        '500':
          description: Internal server error
      security:
        - BearerAuth: []
  /users/{user-id}/transactions/{transaction-id}:
    get:
      tags:
        - Transactions
      summary: Retrieve transaction details
      description: Retrieve details of a specific transaction.
      parameters:
        - in: path
          name: transaction-id
          required: true
          description: ID of the transaction to retrieve
          type: string
        - in: path
          name: user-id
          required: true
          description: ID of the user to retrieve
          type: string
      responses:
        '200':
          description: Transaction details
          schema:
            $ref: '#/definitions/DetailedTransaction'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized - User is not authenticated or does not have the necessary permissions
        '403':
          description: Forbidden - Authenticated user is not allowed to access this resource
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
      security:
        - BearerAuth: []
    put:
      tags:
        - Transactions
      summary: Update or delete transaction information
      description: Update or delete the information of a specific transaction.
      parameters:
        - in: path
          name: transaction-id
          required: true
          description: ID of the transaction to update or delete
          type: string
        - in: path
          name: user-id
          required: true
          description: ID of the user
          type: string
      requestBody:
        description: Transaction information to update or delete
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                  description: ID of the new category for the transaction
                note:
                  type: string
                  description: New note for the transaction. Use an empty string to delete the note.
      responses:
        '200':
          description: Transaction updated successfully, returns updated transaction details
          schema:
            $ref: '#/definitions/DetailedTransaction'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized - User is not authenticated or does not have the necessary permissions
        '403':
          description: Forbidden - Authenticated user is not allowed to access this resource
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
      security:
        - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
definitions:
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
      date:
        type: string
        format: date-time
      description:
        type: string
  DetailedTransaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
      date:
        type: string
        format: date-time
      description:
        type: string
      transactionType:
        type: string
        description: Type of the transaction (e.g., "credit", "debit")
      category:
        type: string
        description: Category of the transaction
      note:
        type: string
        description: Additional note for the transaction
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name
  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
        description: User public name
